const ethers = require("ethers");
require("dotenv").config();

// Usage: node scripts/readAttention.js <TOKEN_SYMBOL> <CONSUMER_ADDRESS>
// Example: node scripts/readAttention.js BTC 0xc6F473869adE...d54d7

async function main() {
  const token = process.argv[2];
  let consumer = process.argv[3];

  if (!token || !consumer) {
    console.error("Usage: node scripts/readAttention.js <TOKEN_SYMBOL> <CONSUMER_ADDRESS>");
    process.exit(1);
  }

  // Ethers v6 exposes isAddress at the top level (no utils namespace).
  if (!ethers.isAddress(consumer)) {
    throw new Error(`Invalid consumer contract address: ${consumer}`);
  }

  // Ethers checksummed-address guard can revert on mixed-case strings with
  // incorrect checksum, so force lowercase to bypass the checksum test.
  consumer = consumer.toLowerCase();

  // RPC url for Sepolia from .env
  const rpcUrl = process.env.ETHEREUM_SEPOLIA_RPC_URL;
  if (!rpcUrl) {
    throw new Error("ETHEREUM_SEPOLIA_RPC_URL is not set in .env");
  }

  const provider = new ethers.JsonRpcProvider(rpcUrl);

  // Load ABI generated by Hardhat
  const oracleArtifact = require("../artifacts/contracts/AttentionOracle.sol/AttentionOracle.json");
  const oracle = new ethers.Contract(consumer, oracleArtifact.abi, provider);

  const [score, timestamp] = await oracle.getAttentionScore(token);

  if (score === 0n) {
    console.log(`No score stored for ${token} yet.`);
    return;
  }

  console.log(`Attention score for ${token}: ${score.toString()}`);
  console.log(`Last updated : ${new Date(Number(timestamp) * 1000).toISOString()}`);
  const isFresh = Date.now() / 1000 - Number(timestamp) < 300;
  console.log(`Fresh (<5min): ${isFresh}`);
}

main().catch((err) => {
  console.error(err);
  process.exit(1);
}); 